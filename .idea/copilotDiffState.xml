<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/a1/sitesync/CameraScreen.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/a1/sitesync/CameraScreen.kt" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="package com.a1.sitesync&#10;&#10;import androidx.compose.material3.Button&#10;import androidx.compose.material3.Scaffold&#10;import androidx.compose.material3.Text&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.ui.Modifier&#10;&#10;@Composable&#10;fun CameraScreen(onNext: () -&gt; Unit, modifier: Modifier = Modifier) {&#10;    Scaffold(modifier = modifier) { padding -&gt;&#10;        Button(onClick = onNext, modifier = Modifier.padding(padding)) {&#10;            Text(&quot;Go to OverlayScreen&quot;)&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/a1/sitesync/FormScreen.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/a1/sitesync/FormScreen.kt" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="package com.a1.sitesync&#10;&#10;import androidx.compose.material3.Button&#10;import androidx.compose.material3.Scaffold&#10;import androidx.compose.material3.Text&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.ui.Modifier&#10;&#10;@Composable&#10;fun FormScreen(onNext: () -&gt; Unit, modifier: Modifier = Modifier) {&#10;    Scaffold(modifier = modifier) { padding -&gt;&#10;        Button(onClick = onNext, modifier = Modifier.padding(padding)) {&#10;            Text(&quot;Go to CameraScreen&quot;)&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/a1/sitesync/OverlayScreen.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/a1/sitesync/OverlayScreen.kt" />
              <option name="updatedContent" value="package com.a1.sitesync&#10;&#10;import androidx.compose.material3.Button&#10;import androidx.compose.material3.Scaffold&#10;import androidx.compose.material3.Text&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.ui.Modifier&#10;&#10;@Composable&#10;fun OverlayScreen(onNext: () -&gt; Unit, modifier: Modifier = Modifier) {&#10;    Scaffold(modifier = modifier) { padding -&gt;&#10;        Button(onClick = onNext, modifier = Modifier) {&#10;            Text(&quot;Go to PreviewScreen&quot;)&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/a1/sitesync/PreviewScreen.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/a1/sitesync/PreviewScreen.kt" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="package com.a1.sitesync&#10;&#10;import androidx.compose.material3.Button&#10;import androidx.compose.material3.Scaffold&#10;import androidx.compose.material3.Text&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.ui.Modifier&#10;&#10;@Composable&#10;fun PreviewScreen(onNext: () -&gt; Unit, modifier: Modifier = Modifier) {&#10;    Scaffold(modifier = modifier) { padding -&gt;&#10;        Button(onClick = onNext, modifier = Modifier.padding(padding)) {&#10;            Text(&quot;Go to SyncScreen&quot;)&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/a1/sitesync/SyncScreen.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/a1/sitesync/SyncScreen.kt" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="package com.a1.sitesync&#10;&#10;import androidx.compose.material3.Button&#10;import androidx.compose.material3.Scaffold&#10;import androidx.compose.material3.Text&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.ui.Modifier&#10;&#10;@Composable&#10;fun SyncScreen(onBack: () -&gt; Unit, modifier: Modifier = Modifier) {&#10;    Scaffold(modifier = modifier) { padding -&gt;&#10;        Button(onClick = onBack, modifier = Modifier.padding(padding)) {&#10;            Text(&quot;Back&quot;)&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/a1/sitesync/data/database/model/Provisions.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/a1/sitesync/data/database/model/Provisions.kt" />
              <option name="originalContent" value="package com.a1.sitesync.data.database.model&#10;&#10;import androidx.room.ColumnInfo&#10;&#10;data class Provisions(&#10;    @ColumnInfo(name = &quot;has_cabling&quot;)&#10;    val hasCabling: Boolean = false,&#10;&#10;    @ColumnInfo(name = &quot;has_storage&quot;)&#10;    val hasStorage: Boolean = false&#10;)" />
              <option name="updatedContent" value="package com.a1.sitesync.data.database.model&#10;&#10;import androidx.room.ColumnInfo&#10;&#10;data class Provisions(&#10;    @ColumnInfo(name = &quot;has_cabling&quot;)&#10;    val hasCabling: Boolean = false,&#10;&#10;    @ColumnInfo(name = &quot;has_storage&quot;)&#10;    val hasStorage: Boolean = false&#10;)" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>